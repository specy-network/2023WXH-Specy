// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Regulator.proto

#include "Regulator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace request_proto {
class TaskRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskRequest> _instance;
} _TaskRequest_default_instance_;
class TaskResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskResponse> _instance;
} _TaskResponse_default_instance_;
}  // namespace request_proto
static void InitDefaultsTaskRequest_Regulator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_TaskRequest_default_instance_;
    new (ptr) ::request_proto::TaskRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::TaskRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskRequest_Regulator_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskRequest_Regulator_2eproto}, {}};

static void InitDefaultsTaskResponse_Regulator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_TaskResponse_default_instance_;
    new (ptr) ::request_proto::TaskResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::TaskResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TaskResponse_Regulator_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTaskResponse_Regulator_2eproto}, {}};

void InitDefaults_Regulator_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_TaskRequest_Regulator_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TaskResponse_Regulator_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_Regulator_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_Regulator_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_Regulator_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_Regulator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskRequest, taskhash_),
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskRequest, rule_file_),
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskRequest, input_data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskResponse, taskhash_),
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskResponse, status_),
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskResponse, error_info_),
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskResponse, output_data_),
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskResponse, cproof_),
  PROTOBUF_FIELD_OFFSET(::request_proto::TaskResponse, signature_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::request_proto::TaskRequest)},
  { 8, -1, sizeof(::request_proto::TaskResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_TaskRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_TaskResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_Regulator_2eproto = {
  {}, AddDescriptors_Regulator_2eproto, "Regulator.proto", schemas,
  file_default_instances, TableStruct_Regulator_2eproto::offsets,
  file_level_metadata_Regulator_2eproto, 2, file_level_enum_descriptors_Regulator_2eproto, file_level_service_descriptors_Regulator_2eproto,
};

const char descriptor_table_protodef_Regulator_2eproto[] =
  "\n\017Regulator.proto\022\rrequest_proto\"F\n\013Task"
  "Request\022\020\n\010taskhash\030\001 \001(\014\022\021\n\trule_file\030\002"
  " \001(\t\022\022\n\ninput_data\030\003 \001(\t\"|\n\014TaskResponse"
  "\022\020\n\010taskhash\030\001 \001(\014\022\016\n\006status\030\002 \001(\010\022\022\n\ner"
  "ror_info\030\003 \001(\t\022\023\n\013output_data\030\004 \001(\t\022\016\n\006c"
  "proof\030\005 \001(\t\022\021\n\tsignature\030\006 \001(\0142[\n\tRegula"
  "tor\022N\n\rGetTaskResult\022\032.request_proto.Tas"
  "kRequest\032\033.request_proto.TaskResponse\"\000("
  "\0010\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_Regulator_2eproto = {
  false, InitDefaults_Regulator_2eproto, 
  descriptor_table_protodef_Regulator_2eproto,
  "Regulator.proto", &assign_descriptors_table_Regulator_2eproto, 331,
};

void AddDescriptors_Regulator_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_Regulator_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Regulator_2eproto = []() { AddDescriptors_Regulator_2eproto(); return true; }();
namespace request_proto {

// ===================================================================

void TaskRequest::InitAsDefaultInstance() {
}
class TaskRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskRequest::kTaskhashFieldNumber;
const int TaskRequest::kRuleFileFieldNumber;
const int TaskRequest::kInputDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskRequest::TaskRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.TaskRequest)
}
TaskRequest::TaskRequest(const TaskRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskhash().size() > 0) {
    taskhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskhash_);
  }
  rule_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rule_file().size() > 0) {
    rule_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_file_);
  }
  input_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_data().size() > 0) {
    input_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_data_);
  }
  // @@protoc_insertion_point(copy_constructor:request_proto.TaskRequest)
}

void TaskRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskRequest_Regulator_2eproto.base);
  taskhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rule_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TaskRequest::~TaskRequest() {
  // @@protoc_insertion_point(destructor:request_proto.TaskRequest)
  SharedDtor();
}

void TaskRequest::SharedDtor() {
  taskhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rule_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskRequest& TaskRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskRequest_Regulator_2eproto.base);
  return *internal_default_instance();
}


void TaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.TaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rule_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes taskhash = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_taskhash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string rule_file = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.TaskRequest.rule_file");
        object = msg->mutable_rule_file();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string input_data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.TaskRequest.input_data");
        object = msg->mutable_input_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.TaskRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes taskhash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_taskhash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rule_file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rule_file().data(), static_cast<int>(this->rule_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.TaskRequest.rule_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string input_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->input_data().data(), static_cast<int>(this->input_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.TaskRequest.input_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.TaskRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.TaskRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.TaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes taskhash = 1;
  if (this->taskhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->taskhash(), output);
  }

  // string rule_file = 2;
  if (this->rule_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rule_file().data(), static_cast<int>(this->rule_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.TaskRequest.rule_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rule_file(), output);
  }

  // string input_data = 3;
  if (this->input_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_data().data(), static_cast<int>(this->input_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.TaskRequest.input_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->input_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.TaskRequest)
}

::google::protobuf::uint8* TaskRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.TaskRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes taskhash = 1;
  if (this->taskhash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->taskhash(), target);
  }

  // string rule_file = 2;
  if (this->rule_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rule_file().data(), static_cast<int>(this->rule_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.TaskRequest.rule_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rule_file(), target);
  }

  // string input_data = 3;
  if (this->input_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->input_data().data(), static_cast<int>(this->input_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.TaskRequest.input_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->input_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.TaskRequest)
  return target;
}

size_t TaskRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.TaskRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes taskhash = 1;
  if (this->taskhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->taskhash());
  }

  // string rule_file = 2;
  if (this->rule_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rule_file());
  }

  // string input_data = 3;
  if (this->input_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.TaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TaskRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.TaskRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.TaskRequest)
    MergeFrom(*source);
  }
}

void TaskRequest::MergeFrom(const TaskRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.TaskRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskhash().size() > 0) {

    taskhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskhash_);
  }
  if (from.rule_file().size() > 0) {

    rule_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_file_);
  }
  if (from.input_data().size() > 0) {

    input_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_data_);
  }
}

void TaskRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.TaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskRequest::CopyFrom(const TaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.TaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskRequest::IsInitialized() const {
  return true;
}

void TaskRequest::Swap(TaskRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskRequest::InternalSwap(TaskRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  taskhash_.Swap(&other->taskhash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rule_file_.Swap(&other->rule_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_data_.Swap(&other->input_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TaskRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Regulator_2eproto);
  return ::file_level_metadata_Regulator_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TaskResponse::InitAsDefaultInstance() {
}
class TaskResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskResponse::kTaskhashFieldNumber;
const int TaskResponse::kStatusFieldNumber;
const int TaskResponse::kErrorInfoFieldNumber;
const int TaskResponse::kOutputDataFieldNumber;
const int TaskResponse::kCproofFieldNumber;
const int TaskResponse::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskResponse::TaskResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.TaskResponse)
}
TaskResponse::TaskResponse(const TaskResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  taskhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.taskhash().size() > 0) {
    taskhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskhash_);
  }
  error_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_info().size() > 0) {
    error_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_info_);
  }
  output_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_data().size() > 0) {
    output_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_data_);
  }
  cproof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cproof().size() > 0) {
    cproof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cproof_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:request_proto.TaskResponse)
}

void TaskResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskResponse_Regulator_2eproto.base);
  taskhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cproof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
}

TaskResponse::~TaskResponse() {
  // @@protoc_insertion_point(destructor:request_proto.TaskResponse)
  SharedDtor();
}

void TaskResponse::SharedDtor() {
  taskhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cproof_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TaskResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskResponse& TaskResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskResponse_Regulator_2eproto.base);
  return *internal_default_instance();
}


void TaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.TaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taskhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cproof_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes taskhash = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_taskhash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool status = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_status(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string error_info = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.TaskResponse.error_info");
        object = msg->mutable_error_info();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string output_data = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.TaskResponse.output_data");
        object = msg->mutable_output_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string cproof = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.TaskResponse.cproof");
        object = msg->mutable_cproof();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes signature = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.TaskResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes taskhash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_taskhash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_info().data(), static_cast<int>(this->error_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.TaskResponse.error_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string output_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->output_data().data(), static_cast<int>(this->output_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.TaskResponse.output_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cproof = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cproof()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cproof().data(), static_cast<int>(this->cproof().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.TaskResponse.cproof"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes signature = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.TaskResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.TaskResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.TaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes taskhash = 1;
  if (this->taskhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->taskhash(), output);
  }

  // bool status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->status(), output);
  }

  // string error_info = 3;
  if (this->error_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_info().data(), static_cast<int>(this->error_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.TaskResponse.error_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_info(), output);
  }

  // string output_data = 4;
  if (this->output_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_data().data(), static_cast<int>(this->output_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.TaskResponse.output_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->output_data(), output);
  }

  // string cproof = 5;
  if (this->cproof().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cproof().data(), static_cast<int>(this->cproof().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.TaskResponse.cproof");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cproof(), output);
  }

  // bytes signature = 6;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.TaskResponse)
}

::google::protobuf::uint8* TaskResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.TaskResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes taskhash = 1;
  if (this->taskhash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->taskhash(), target);
  }

  // bool status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->status(), target);
  }

  // string error_info = 3;
  if (this->error_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_info().data(), static_cast<int>(this->error_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.TaskResponse.error_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_info(), target);
  }

  // string output_data = 4;
  if (this->output_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->output_data().data(), static_cast<int>(this->output_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.TaskResponse.output_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->output_data(), target);
  }

  // string cproof = 5;
  if (this->cproof().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cproof().data(), static_cast<int>(this->cproof().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.TaskResponse.cproof");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cproof(), target);
  }

  // bytes signature = 6;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.TaskResponse)
  return target;
}

size_t TaskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.TaskResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes taskhash = 1;
  if (this->taskhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->taskhash());
  }

  // string error_info = 3;
  if (this->error_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_info());
  }

  // string output_data = 4;
  if (this->output_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_data());
  }

  // string cproof = 5;
  if (this->cproof().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cproof());
  }

  // bytes signature = 6;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  // bool status = 2;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.TaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskResponse* source =
      ::google::protobuf::DynamicCastToGenerated<TaskResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.TaskResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.TaskResponse)
    MergeFrom(*source);
  }
}

void TaskResponse::MergeFrom(const TaskResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.TaskResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taskhash().size() > 0) {

    taskhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskhash_);
  }
  if (from.error_info().size() > 0) {

    error_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_info_);
  }
  if (from.output_data().size() > 0) {

    output_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_data_);
  }
  if (from.cproof().size() > 0) {

    cproof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cproof_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TaskResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.TaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskResponse::CopyFrom(const TaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.TaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskResponse::IsInitialized() const {
  return true;
}

void TaskResponse::Swap(TaskResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskResponse::InternalSwap(TaskResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  taskhash_.Swap(&other->taskhash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_info_.Swap(&other->error_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_data_.Swap(&other->output_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cproof_.Swap(&other->cproof_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
}

::google::protobuf::Metadata TaskResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Regulator_2eproto);
  return ::file_level_metadata_Regulator_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace request_proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::request_proto::TaskRequest* Arena::CreateMaybeMessage< ::request_proto::TaskRequest >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::TaskRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::request_proto::TaskResponse* Arena::CreateMaybeMessage< ::request_proto::TaskResponse >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::TaskResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
